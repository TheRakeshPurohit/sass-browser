"use strict";function getAllScssSheets(){let sheets=[];const links=document.querySelectorAll("link");links.forEach(link=>{if(link.rel==="stylesheet/scss"){sheets.push(link)}});sheets=sheets.map((function(sheet){return sheet.getAttribute("href")}));return sheets}async function resolveAndDownloadFile(href,debugLog){var haveExtension=new RegExp(`.*.(css|scss|sass)$`).test(href);let result=await getRemoteFile(href);if(result.error){const originalError=result.error;const hrefUnderscore=addUnderscore(href);let resultPromises=[getRemoteFile(hrefUnderscore,debugLog)];if(!haveExtension){resultPromises.push(getRemoteFile(hrefUnderscore+".scss",debugLog),getRemoteFile(hrefUnderscore+".sass",debugLog),getRemoteFile(hrefUnderscore+".css",debugLog),getRemoteFile(href+".scss",debugLog),getRemoteFile(href+".sass",debugLog),getRemoteFile(href+".css",debugLog))}return await Promise.allSettled(resultPromises).then(results=>{for(const result of results){if(result.status!=="rejected"&&typeof result.value.error==="undefined"){return result.value}}return{error:originalError}})}return result}async function getRemoteFile(href,debugLog){if(debugLog){console.log("to retrive : ",href)}try{let response=await fetch(href,{headers:new Headers({"Content-Type":"text/x-scss"})});if(!response.ok||response.headers.get("Content-Type").startsWith("text/html")){if(debugLog){console.warn("fetch response : ",response)}throw new Error(response.status+" : "+response.statusText+" "+href)}let content=await response.text();return{content:content}}catch(ex){return{error:ex.message}}}function addUnderscore(href){const filenameStart=href.lastIndexOf("/")+1;let filename=href.substring(filenameStart);if(!filename.startsWith("_")){filename="_"+filename}if(filenameStart>0){return href.substring(0,filenameStart)+filename}else{return filename}}(function(){const debugLog=window.sassOptions&&window.sassOptions.debug;const sass=new Sass;sass.importer((function(request,done){if(debugLog){console.log("importer request: ",request)}if(request.path){done()}else if(request.current){const href=request.resolved.replace("/sass/","");resolveAndDownloadFile(href,debugLog).then(result=>{if(!result.error){result.path=request.resolved}done(result)})}else{done()}}));let options={comments:true,sourceMapEmbed:true,sourceMapContents:true,sourceMapOmitUrl:false};if(window.sassOptions){if(typeof window.sassOptions.comments!=="undefined"){options.comments=window.sassOptions.comments==true}if(typeof window.sassOptions.sourceMaps!=="undefined"){options.sourceMapEmbed=window.sassOptions.comments==true;options.sourceMapContents=options.sourceMapEmbed}}sass.options(options,(function callback(){const sheets=getAllScssSheets();for(const sheet of sheets){sass.compile('@import "'+sheet+'";',compilationResult=>{if(compilationResult.status===0){console.log("compile file : ",sheet," ",compilationResult);const head=document.head||document.getElementsByTagName("head")[0];const style=document.createElement("style");head.appendChild(style);style.type="text/css";style.appendChild(document.createTextNode(compilationResult.text))}else{console.error("compile : ",compilationResult)}})}}))})();